{"version":3,"sources":["webpack://SimpleSvgGauge/webpack/universalModuleDefinition","webpack://SimpleSvgGauge/webpack/bootstrap","webpack://SimpleSvgGauge/webpack/runtime/make namespace object","webpack://SimpleSvgGauge/./src/js/index.ts"],"names":["root","factory","exports","module","define","amd","self","Symbol","toStringTag","Object","defineProperty","value","_this","this","strokeWidth","init","setVariables","setDimensions","Number","gauge","getAttribute","setSections","sections","lastRotation","radius","width","circumference","Math","PI","forEach","call","circles","el","i","percentage","validatePercentage","rotation","offset","length","updateAttributes","setRotation","percentageToDegree","setValue","degree","needle","style","transform","document","querySelector","querySelectorAll","parseInt","window","getComputedStyle","strokeDasharray","strokeDashoffset","String","setAttribute","height","gsap","to","duration","transformOrigin","console","error"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAwB,eAAID,IAE5BD,EAAqB,eAAIC,IAR3B,CASGK,MAAM,WACT,O,wBCTA,I,MCAwB,SAASJ,GACX,oBAAXK,QAA0BA,OAAOC,aAC1CC,OAAOC,eAAeR,EAASK,OAAOC,YAAa,CAAEG,MAAO,WAE7DF,OAAOC,eAAeR,EAAS,aAAc,CAAES,OAAO,K,WCuEvD,UA3EI,WACI,IAAIC,EAAQC,KACZA,KAAKC,YAAc,GACnBD,KAAKE,KAAO,WACRH,EAAMI,eACNJ,EAAMK,cAAcC,OAAON,EAAMO,MAAMC,aAAa,UAAWF,OAAON,EAAMO,MAAMC,aAAa,aAEnGP,KAAKQ,YAAc,SAAUC,GACzB,IACIC,EAAe,EACnBX,EAAMY,OAASZ,EAAMa,MAAQ,EAAIb,EAAME,YAAc,EACrDF,EAAMc,cAA+B,EAAfd,EAAMY,OAAaG,KAAKC,GAE9C,GAAGC,QAAQC,KAAKlB,EAAMmB,SAAS,SAAUC,EAAIC,GACzC,IAAIC,EAAatB,EAAMuB,mBAAmBb,EAASW,IAC/CG,EAPc,IAOeb,EAC7Bc,EAASzB,EAAMc,cAAkBQ,EAAa,IAAOtB,EAAMc,cAAiB,EAC5EO,EAAIrB,EAAMmB,QAAQO,OAAS,IAC3BD,GAAU,GAEdzB,EAAM2B,iBAAiBP,EAAIK,GAC3BzB,EAAM4B,YAAYR,EAAII,GACtBb,GAA8BX,EAAM6B,mBAAmBP,OAG/DrB,KAAK6B,SAAW,SAAUR,GACtB,IAAIS,EAAS/B,EAAM6B,mBAAmB7B,EAAMuB,mBAAmBD,IAC/DtB,EAAMgC,OAAOC,MAAMC,UACf,UAAY5B,OAAO,IAAMyB,GAAU,0BAE3C9B,KAAKG,aAAe,WAChBJ,EAAMO,MAAQ4B,SAASC,cAAc,wBACrCpC,EAAMgC,OAASG,SAASC,cAAc,+BACtCpC,EAAMmB,QAAUnB,EAAMO,MAAM8B,iBAAiB,UACzCrC,EAAMmB,QAAQO,SACd1B,EAAME,YAAcoC,SAASC,OAAOC,iBAAiBxC,EAAMmB,QAAQ,IAAIjB,YAAa,MAG5FD,KAAK0B,iBAAmB,SAAUP,EAAIK,GAClCL,EAAGa,MAAMQ,gBAAkBzC,EAAMc,cAAgB,IAAMd,EAAMc,cAC7DM,EAAGa,MAAMS,iBAAmBC,OAAOlB,GACnCL,EAAGwB,aAAa,KAAMD,OAAO3C,EAAMa,MAAQ,IAC3CO,EAAGwB,aAAa,KAAMD,OAAO3C,EAAM6C,OAAS,IAC5CzB,EAAGwB,aAAa,IAAKD,OAAO3C,EAAMY,UAEtCX,KAAK2B,YAAc,SAAUR,EAAII,GAET,oBAATsB,KACPA,KAAKC,GAAG3B,EAAI,CACR4B,SAAU,EACVxB,SAAUA,EACVyB,gBAAiB,YAIrB7B,EAAGa,MAAMC,UAAY,UAAYV,EAAW,QAGpDvB,KAAKI,cAAgB,SAAUQ,EAAOgC,GAClC7C,EAAMa,MAAQA,EACdb,EAAM6C,OAASA,GAEnB5C,KAAK4B,mBAAqB,SAAUP,GAChC,OAAQA,EAAa,IAAO,KAEhCrB,KAAKsB,mBAAqB,SAAUD,GAKhC,OAJMA,GAAc,GAAKA,GAAc,MACnCA,EAAa,EACb4B,QAAQC,MAAM,wCAEX7B,I","file":"simple-svg-gauge.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleSvgGauge\"] = factory();\n\telse\n\t\troot[\"SimpleSvgGauge\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var SimpleSvgGauge = /** @class */ (function () {\n    function SimpleSvgGauge() {\n        var _this = this;\n        this.strokeWidth = 42;\n        this.init = function () {\n            _this.setVariables();\n            _this.setDimensions(Number(_this.gauge.getAttribute(\"width\")), Number(_this.gauge.getAttribute(\"height\")));\n        };\n        this.setSections = function (sections) {\n            var currentRotation = 180;\n            var lastRotation = 0;\n            _this.radius = _this.width / 2 - _this.strokeWidth / 2;\n            _this.circumference = _this.radius * 2 * Math.PI;\n            // loop all circles\n            [].forEach.call(_this.circles, function (el, i) {\n                var percentage = _this.validatePercentage(sections[i]);\n                var rotation = currentRotation + lastRotation;\n                var offset = _this.circumference - ((percentage / 100) * _this.circumference) / 2;\n                if (i < _this.circles.length - 1) {\n                    offset += 2;\n                }\n                _this.updateAttributes(el, offset);\n                _this.setRotation(el, rotation);\n                lastRotation = lastRotation + _this.percentageToDegree(percentage);\n            });\n        };\n        this.setValue = function (percentage) {\n            var degree = _this.percentageToDegree(_this.validatePercentage(percentage));\n            _this.needle.style.transform =\n                \"rotate(\" + Number(270 + degree) + \"deg) translate(0, 6px)\";\n        };\n        this.setVariables = function () {\n            _this.gauge = document.querySelector(\".js-simple-svg-gauge\");\n            _this.needle = document.querySelector(\".js-simple-svg-gauge-needle\");\n            _this.circles = _this.gauge.querySelectorAll(\"circle\");\n            if (_this.circles.length) {\n                _this.strokeWidth = parseInt(window.getComputedStyle(_this.circles[0]).strokeWidth, 10);\n            }\n        };\n        this.updateAttributes = function (el, offset) {\n            el.style.strokeDasharray = _this.circumference + \" \" + _this.circumference;\n            el.style.strokeDashoffset = String(offset);\n            el.setAttribute(\"cx\", String(_this.width / 2));\n            el.setAttribute(\"cy\", String(_this.height / 2));\n            el.setAttribute(\"r\", String(_this.radius));\n        };\n        this.setRotation = function (el, rotation) {\n            // use gsap for transform if available for IE 11 support\n            if (typeof gsap !== \"undefined\") {\n                gsap.to(el, {\n                    duration: 0,\n                    rotation: rotation,\n                    transformOrigin: \"50% 50%\",\n                });\n            }\n            else {\n                el.style.transform = \"rotate(\" + rotation + \"deg)\";\n            }\n        };\n        this.setDimensions = function (width, height) {\n            _this.width = width;\n            _this.height = height;\n        };\n        this.percentageToDegree = function (percentage) {\n            return (percentage / 100) * 180; // 180 deg for half circle\n        };\n        this.validatePercentage = function (percentage) {\n            if (!(percentage >= 0 && percentage <= 100)) {\n                percentage = 0;\n                console.error(\"Please use valid percentage values.\");\n            }\n            return percentage;\n        };\n    }\n    return SimpleSvgGauge;\n}());\nexport default SimpleSvgGauge;\n"],"sourceRoot":""}