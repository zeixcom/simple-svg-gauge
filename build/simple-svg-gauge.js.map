{"version":3,"sources":["webpack://SimpleSvgGauge/webpack/universalModuleDefinition","webpack://SimpleSvgGauge/webpack/bootstrap","webpack://SimpleSvgGauge/webpack/runtime/define property getters","webpack://SimpleSvgGauge/webpack/runtime/hasOwnProperty shorthand","webpack://SimpleSvgGauge/webpack/runtime/make namespace object","webpack://SimpleSvgGauge/./src/js/index.js"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","sections","$this","this","lastRotation","forEach","circles","el","i","strokeWidth","parseInt","window","getComputedStyle","setAttribute","width","height","circumference","getAttribute","Math","PI","percentage","validatePercentage","rotation","offset","length","style","strokeDasharray","strokeDashoffset","gsap","to","duration","transformOrigin","transform","percentageToDegree","degree","needle","console","error","gauge","document","querySelector","querySelectorAll"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAwB,eAAID,IAE5BD,EAAqB,eAAIC,IAR3B,CASGK,MAAM,WACT,M,mBCTA,IAAIC,EAAsB,CCA1B,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3E,EAAwB,CAACM,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClF,EAAyBd,IACH,oBAAXkB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeV,EAASkB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeV,EAAS,aAAc,CAAEoB,OAAO,M,2JCkEvD,QAtEE,c,4FAAc,+BAQA,SAAUC,GACtB,IAAMC,EAAQC,KAEVC,EAAe,EAGnB,GAAGC,QAAQR,KAAKM,KAAKG,SAAS,SAAUC,EAAIC,GAC1C,IAAMC,EAAcC,SAASC,OAAOC,iBAAiBL,GAAIE,YAAa,IAEtEF,EAAGM,aAAa,KAAMX,EAAMY,MAAQ,GACpCP,EAAGM,aAAa,KAAMX,EAAMa,OAAS,GACrCR,EAAGM,aAAa,IAAKX,EAAMY,MAAQ,EAAIL,EAAc,GAErD,IACMO,EAAyB,EADhBT,EAAGU,aAAa,KACIC,KAAKC,GAClCC,EAAalB,EAAMmB,mBAAmBpB,EAASO,IAC/Cc,EAAWZ,SAdK,IAcsBN,EAAc,IACtDmB,EAASP,EAAkBI,EAAa,IAAOJ,EAAiB,EAEhER,EAAIN,EAAMI,QAAQkB,OAAS,IAC7BD,GAAU,GAGZhB,EAAGkB,MAAMC,gBAAkBV,EAAgB,IAAMA,EACjDT,EAAGkB,MAAME,iBAAmBJ,EAGR,oBAATK,KACTA,KAAKC,GAAGtB,EAAI,CACVuB,SAAU,EACVR,SAAUA,EACVS,gBAAiB,YAGnBxB,EAAGkB,MAAMO,UAAY,UAAYV,EAAW,OAG9ClB,GAA8BF,EAAM+B,mBAAmBb,SA7C7C,oBAiDF,SAAUA,GACpB,IAAMc,EAAS/B,KAAK8B,mBAAmB9B,KAAKkB,mBAAmBD,IAE/DjB,KAAKgC,OAAOV,MAAMO,UAChB,UAAYtB,SAAS,IAAMwB,EAAQ,IAAM,4BArD/B,6BAwDO,SAAUd,GAC7B,OAAQA,EAAa,IAAO,OAzDhB,6BA4DO,SAAUA,GAM7B,OALMA,GAAc,GAAKA,GAAc,MACrCA,EAAa,EACbgB,QAAQC,MAAM,wCAGTjB,KAjEPjB,KAAKmC,MAAQC,SAASC,cAAc,wBACpCrC,KAAKgC,OAASI,SAASC,cAAc,+BACrCrC,KAAKG,QAAUH,KAAKmC,MAAMG,iBAAiB,UAC3CtC,KAAKW,MAAQX,KAAKmC,MAAMrB,aAAa,SACrCd,KAAKY,OAASZ,KAAKmC,MAAMrB,aAAa,W","file":"simple-svg-gauge.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleSvgGauge\"] = factory();\n\telse\n\t\troot[\"SimpleSvgGauge\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","class SimpleSvgGauge {\n  constructor() {\n    this.gauge = document.querySelector(\".js-simple-svg-gauge\");\n    this.needle = document.querySelector(\".js-simple-svg-gauge-needle\");\n    this.circles = this.gauge.querySelectorAll(\"circle\");\n    this.width = this.gauge.getAttribute(\"width\");\n    this.height = this.gauge.getAttribute(\"height\");\n  }\n\n  setSections = function (sections) {\n    const $this = this;\n    const currentRotation = 180;\n    let lastRotation = 0;\n\n    // loop all circles\n    [].forEach.call(this.circles, function (el, i) {\n      const strokeWidth = parseInt(window.getComputedStyle(el).strokeWidth, 10);\n\n      el.setAttribute(\"cx\", $this.width / 2);\n      el.setAttribute(\"cy\", $this.height / 2);\n      el.setAttribute(\"r\", $this.width / 2 - strokeWidth / 2);\n\n      const radius = el.getAttribute(\"r\");\n      const circumference = radius * 2 * Math.PI;\n      const percentage = $this.validatePercentage(sections[i]);\n      const rotation = parseInt(currentRotation + lastRotation, 10);\n      let offset = circumference - ((percentage / 100) * circumference) / 2;\n\n      if (i < $this.circles.length - 1) {\n        offset += 2;\n      }\n\n      el.style.strokeDasharray = circumference + \" \" + circumference;\n      el.style.strokeDashoffset = offset;\n\n      // use gsap for transform if available for IE 11 support\n      if (typeof gsap !== \"undefined\") {\n        gsap.to(el, {\n          duration: 0,\n          rotation: rotation,\n          transformOrigin: \"50% 50%\",\n        });\n      } else {\n        el.style.transform = \"rotate(\" + rotation + \"deg)\";\n      }\n\n      lastRotation = lastRotation + $this.percentageToDegree(percentage);\n    });\n  };\n\n  setStatus = function (percentage) {\n    const degree = this.percentageToDegree(this.validatePercentage(percentage));\n\n    this.needle.style.transform =\n      \"rotate(\" + parseInt(270 + degree, 10) + \"deg) translate(0, 6px)\";\n  };\n\n  percentageToDegree = function (percentage) {\n    return (percentage / 100) * 180; // 180 deg for half circle\n  };\n\n  validatePercentage = function (percentage) {\n    if (!(percentage >= 0 && percentage <= 100)) {\n      percentage = 0;\n      console.error(\"Please use valid percentage values.\");\n    }\n\n    return percentage;\n  };\n}\n\nexport default SimpleSvgGauge;\n"],"sourceRoot":""}